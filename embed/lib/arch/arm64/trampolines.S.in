.section ".text.trampolines"

#define N_RTCALLS 256
#define PROC_REGS 16
#define REG_BASE  x21
#define REG_SYS_  x25

__lfi_trampoline_slowpath:
	stp x0, x1, [sp, #-16]!
	stp x2, x3, [sp, #-16]!
	stp x4, x5, [sp, #-16]!
	stp x6, x7, [sp, #-16]!
	stp x10, xzr, [sp, #-16]!
	stp q0, q1, [sp, #-32]!
	stp q2, q3, [sp, #-32]!
	stp q4, q5, [sp, #-32]!
	stp q6, q7, [sp, #-32]!
	bl {{.lib}}_setup
	stp q6, q7, [sp], 32
	stp q4, q5, [sp], 32
	stp q2, q3, [sp], 32
	stp q0, q1, [sp], 32
	ldp x10, xzr, [sp], 16
	ldp x6, x7, [sp], 16
	ldp x4, x5, [sp], 16
	ldp x2, x3, [sp], 16
	ldp x0, x1, [sp], 16
	mrs	REG_BASE, tpidr_el0
	add	REG_BASE, REG_BASE, #:tprel_hi12:lfi_myctx, lsl #12
	add	REG_BASE, REG_BASE, #:tprel_lo12_nc:lfi_myctx
	ldr	REG_BASE, [REG_BASE]
	b 1f

__lfi_trampoline:
	stp d8, d9,   [sp, #-16]!
	stp d10, d11, [sp, #-16]!
	stp d12, d13, [sp, #-16]!
	stp d14, d15, [sp, #-16]!
	stp x19, x20, [sp, #-16]!
	stp x21, x22, [sp, #-16]!
	stp x23, x24, [sp, #-16]!
	stp x25, x26, [sp, #-16]!
	stp x27, x28, [sp, #-16]!
	stp x29, x30, [sp, #-16]!
	mrs	REG_BASE, tpidr_el0
	add	REG_BASE, REG_BASE, #:tprel_hi12:lfi_myctx, lsl #12
	add	REG_BASE, REG_BASE, #:tprel_lo12_nc:lfi_myctx
	ldr	REG_BASE, [REG_BASE]

	cbz REG_BASE, __lfi_trampoline_slowpath
1:
	ldr x12, [REG_BASE, PROC_REGS+16*15+8]
	// save user sp to stack
	ldr x13, [REG_BASE]
	stp x12, x13, [sp, #-16]!
	// save kernel stack
	mov x11, sp
	str x11, [REG_BASE]
	// set user stack
	mov sp, x12
	// set return address to __lfisym__lfi_retfn
	adrp x11, __lfisym__lfi_retfn
	ldr x30, [x11, :lo12:__lfisym__lfi_retfn]
	// set base pointer
	ldr REG_BASE, [REG_BASE, PROC_REGS+8*21]
	// set address pointer to a valid value
	mov x18, REG_BASE
.entry:
	add x10, REG_BASE, w10, uxtw
	br x10
	brk #0

.global __lfi_trampolines
__lfi_trampolines:
{{- range $sym := .exported }}
.p2align 4
.global {{$sym}}
{{$sym}}:
	adrp x10, __lfisym_{{$sym}}
	ldr x10, [x10, :lo12:__lfisym_{{$sym}}]
	b __lfi_trampoline
{{- end}}

{{- range $sym := .exposed}}
.p2align 4
.global {{$.lib}}_{{$sym}}
{{$.lib}}_{{$sym}}:
	adrp x10, __lfisym_{{$sym}}
	ldr x10, [x10, :lo12:__lfisym_{{$sym}}]
	b __lfi_trampoline
{{- end}}

.section ".data.trampolines"

.global __lfi_trampotable
__lfi_trampotable:

{{- range $sym := .exported}}
__lfisym_{{$sym}}:
	.quad 0
{{- end}}

{{- range $sym := .exposed}}
.global __lfisym_{{$sym}}
__lfisym_{{$sym}}:
	.quad 0
{{- end}}

.global __lfi_trampotable_size
__lfi_trampotable_size:
	.quad {{.nexported}}+{{.nexposed}}

.section .note.GNU-stack,"",@progbits
